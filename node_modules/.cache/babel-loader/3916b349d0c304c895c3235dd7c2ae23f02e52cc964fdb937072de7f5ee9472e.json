{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import axios from\"axios\";import{Link}from\"react-router-dom\";import{Button,Table,TableBody,TableCell,TableHead,TableRow,Typography}from\"@mui/material\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PatientList=()=>{const[patients,setPatients]=useState([]);useEffect(()=>{const fetchPatients=async()=>{try{const response=await axios.get(\"http://localhost:8080/fhir/Patient\");const entries=response.data.entry||[];setPatients(entries.map(entry=>entry.resource));}catch(error){console.error(\"Error fetching patients:\",error);}};fetchPatients();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Patient List\"}),/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Name\"}),/*#__PURE__*/_jsx(TableCell,{children:\"ID Card Number\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Patient ID\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Birth Date\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Gender\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Contact Information\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Diagnostic Information\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:patients.map(patient=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:patient.name&&patient.name.length>0?\"\".concat(patient.name[0].given.join(\" \"),\" \").concat(patient.name[0].family):\"N/A\"}),/*#__PURE__*/_jsx(TableCell,{children:patient.identifier?patient.identifier[0].value:\"N/A\"}),/*#__PURE__*/_jsx(TableCell,{children:patient.id}),/*#__PURE__*/_jsx(TableCell,{children:patient.birthDate||\"N/A\"}),/*#__PURE__*/_jsx(TableCell,{children:patient.gender||\"N/A\"}),/*#__PURE__*/_jsx(TableCell,{children:patient.telecom?patient.telecom[0].value:\"N/A\"}),/*#__PURE__*/_jsx(TableCell,{}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Button,{component:Link,to:\"/order/\".concat(patient.id),variant:\"contained\",color:\"primary\",children:\"Create Test Order\"})})]},patient.id))})]})]});};export default PatientList;","map":{"version":3,"names":["React","useEffect","useState","axios","Link","Button","Table","TableBody","TableCell","TableHead","TableRow","Typography","jsx","_jsx","jsxs","_jsxs","PatientList","patients","setPatients","fetchPatients","response","get","entries","data","entry","map","resource","error","console","children","variant","gutterBottom","patient","name","length","concat","given","join","family","identifier","value","id","birthDate","gender","telecom","component","to","color"],"sources":["/Users/sai/Documents/sai/DST/Year3/sem2/Project-FHIR/hospital-fhir/src/components/PatientList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\n\nconst PatientList = () => {\n  const [patients, setPatients] = useState([]);\n\n  useEffect(() => {\n    const fetchPatients = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/fhir/Patient\");\n        const entries = response.data.entry || [];\n        setPatients(entries.map((entry) => entry.resource));\n      } catch (error) {\n        console.error(\"Error fetching patients:\", error);\n      }\n    };\n\n    fetchPatients();\n  }, []);\n\n  return (\n    <div>\n      <Typography variant=\"h4\" gutterBottom>\n        Patient List\n      </Typography>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>ID Card Number</TableCell>\n            <TableCell>Patient ID</TableCell>\n            <TableCell>Birth Date</TableCell>\n            <TableCell>Gender</TableCell>\n            <TableCell>Contact Information</TableCell>\n            <TableCell>Diagnostic Information</TableCell>\n            <TableCell>Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {patients.map((patient) => (\n            <TableRow key={patient.id}>\n              <TableCell>\n                {patient.name && patient.name.length > 0\n                  ? `${patient.name[0].given.join(\" \")} ${\n                      patient.name[0].family\n                    }`\n                  : \"N/A\"}\n              </TableCell>\n              <TableCell>\n                {patient.identifier ? patient.identifier[0].value : \"N/A\"}\n              </TableCell>\n              <TableCell>{patient.id}</TableCell>\n              <TableCell>{patient.birthDate || \"N/A\"}</TableCell>\n              <TableCell>{patient.gender || \"N/A\"}</TableCell>\n              <TableCell>\n                {patient.telecom ? patient.telecom[0].value : \"N/A\"}\n              </TableCell>\n              <TableCell>{/* Diagnostic Information */}</TableCell>\n              <TableCell>\n                <Button\n                  component={Link}\n                  to={`/order/${patient.id}`}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Create Test Order\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default PatientList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}