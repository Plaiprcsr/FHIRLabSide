{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import axios from\"axios\";import{Link}from\"react-router-dom\";import{Button,Table,TableBody,TableCell,TableHead,TableRow,Typography,Box}from\"@mui/material\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PatientList=()=>{const[patients,setPatients]=useState([]);useEffect(()=>{const fetchPatients=async()=>{try{const response=await axios.get(\"http://localhost:8080/fhir/Patient\");const entries=response.data.entry||[];setPatients(entries.map(entry=>entry.resource));console.log(\"Fetch Patients:\",JSON.stringify(entries,null,2));}catch(error){console.error(\"Error fetching patients:\",error);}};fetchPatients();},[]);const handleDelete=async patientId=>{try{await axios.delete(\"http://localhost:8080/fhir/Patient/\".concat(patientId));setPatients(patients.filter(patient=>patient.id!==patientId));console.log(\"Delete Patient:\",patientId);}catch(error){console.error(\"Error deleting patient:\",error);}};return/*#__PURE__*/_jsxs(Box,{sx:{marginLeft:\"240px\",padding:\"24px\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Patient List\"}),/*#__PURE__*/_jsx(Button,{component:Link,to:\"/add-patient\",variant:\"contained\",color:\"primary\",sx:{marginBottom:\"24px\"},children:\"Add New Patient\"}),/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Name\"}),/*#__PURE__*/_jsx(TableCell,{children:\"ID Card Number\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Patient ID\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Birth Date\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Gender\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Contact Information\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Diagnostic Information\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:patients.map(patient=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:patient.name&&patient.name.length>0?\"\".concat(patient.name[0].given.join(\" \"),\" \").concat(patient.name[0].family):\"N/A\"}),/*#__PURE__*/_jsx(TableCell,{children:patient.identifier&&patient.identifier.length>0?patient.identifier[0].value:\"N/A\"}),/*#__PURE__*/_jsx(TableCell,{children:patient.id}),/*#__PURE__*/_jsx(TableCell,{children:patient.birthDate||\"N/A\"}),/*#__PURE__*/_jsx(TableCell,{children:patient.gender||\"N/A\"}),/*#__PURE__*/_jsx(TableCell,{children:patient.telecom&&patient.telecom.length>0?patient.telecom.map(t=>t.value).join(\", \"):\"N/A\"}),/*#__PURE__*/_jsx(TableCell,{children:patient.extension&&patient.extension.length>0?patient.extension.filter(ext=>ext.url===\"http://example.org/fhir/StructureDefinition/diagnostic-information\").map(ext=>ext.valueString).join(\", \"):\"N/A\"}),/*#__PURE__*/_jsxs(TableCell,{children:[/*#__PURE__*/_jsx(Button,{component:Link,to:\"/order/\".concat(patient.id),variant:\"contained\",color:\"primary\",sx:{marginRight:\"8px\"},children:\"Create Test Order\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",onClick:()=>handleDelete(patient.id),children:\"Delete\"})]})]},patient.id))})]})]});};export default PatientList;","map":{"version":3,"names":["React","useEffect","useState","axios","Link","Button","Table","TableBody","TableCell","TableHead","TableRow","Typography","Box","jsx","_jsx","jsxs","_jsxs","PatientList","patients","setPatients","fetchPatients","response","get","entries","data","entry","map","resource","console","log","JSON","stringify","error","handleDelete","patientId","delete","concat","filter","patient","id","sx","marginLeft","padding","children","variant","gutterBottom","component","to","color","marginBottom","name","length","given","join","family","identifier","value","birthDate","gender","telecom","t","extension","ext","url","valueString","marginRight","onClick"],"sources":["/Users/sai/Documents/sai/DST/Year3/sem2/Project-FHIR/hospital-fhir/src/components/PatientList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  Box,\n} from \"@mui/material\";\n\nconst PatientList = () => {\n  const [patients, setPatients] = useState([]);\n\n  useEffect(() => {\n    const fetchPatients = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/fhir/Patient\");\n        const entries = response.data.entry || [];\n        setPatients(entries.map((entry) => entry.resource));\n        console.log(\"Fetch Patients:\", JSON.stringify(entries, null, 2));\n      } catch (error) {\n        console.error(\"Error fetching patients:\", error);\n      }\n    };\n\n    fetchPatients();\n  }, []);\n\n  const handleDelete = async (patientId) => {\n    try {\n      await axios.delete(`http://localhost:8080/fhir/Patient/${patientId}`);\n      setPatients(patients.filter((patient) => patient.id !== patientId));\n      console.log(\"Delete Patient:\", patientId);\n    } catch (error) {\n      console.error(\"Error deleting patient:\", error);\n    }\n  };\n\n  return (\n    <Box sx={{ marginLeft: \"240px\", padding: \"24px\" }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Patient List\n      </Typography>\n      <Button\n        component={Link}\n        to=\"/add-patient\"\n        variant=\"contained\"\n        color=\"primary\"\n        sx={{ marginBottom: \"24px\" }}\n      >\n        Add New Patient\n      </Button>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>ID Card Number</TableCell>\n            <TableCell>Patient ID</TableCell>\n            <TableCell>Birth Date</TableCell>\n            <TableCell>Gender</TableCell>\n            <TableCell>Contact Information</TableCell>\n            <TableCell>Diagnostic Information</TableCell>\n            <TableCell>Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {patients.map((patient) => (\n            <TableRow key={patient.id}>\n              <TableCell>\n                {patient.name && patient.name.length > 0\n                  ? `${patient.name[0].given.join(\" \")} ${\n                      patient.name[0].family\n                    }`\n                  : \"N/A\"}\n              </TableCell>\n              <TableCell>\n                {patient.identifier && patient.identifier.length > 0\n                  ? patient.identifier[0].value\n                  : \"N/A\"}\n              </TableCell>\n              <TableCell>{patient.id}</TableCell>\n              <TableCell>{patient.birthDate || \"N/A\"}</TableCell>\n              <TableCell>{patient.gender || \"N/A\"}</TableCell>\n              <TableCell>\n                {patient.telecom && patient.telecom.length > 0\n                  ? patient.telecom.map((t) => t.value).join(\", \")\n                  : \"N/A\"}\n              </TableCell>\n              <TableCell>\n                {patient.extension && patient.extension.length > 0\n                  ? patient.extension\n                      .filter(\n                        (ext) =>\n                          ext.url ===\n                          \"http://example.org/fhir/StructureDefinition/diagnostic-information\"\n                      )\n                      .map((ext) => ext.valueString)\n                      .join(\", \")\n                  : \"N/A\"}\n              </TableCell>\n              <TableCell>\n                <Button\n                  component={Link}\n                  to={`/order/${patient.id}`}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  sx={{ marginRight: \"8px\" }}\n                >\n                  Create Test Order\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => handleDelete(patient.id)}\n                >\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Box>\n  );\n};\n\nexport default PatientList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}